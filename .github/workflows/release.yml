name: Release

on:
  push:
    tags:
      - "v*"
    branches:
      - "release/*"

permissions:
  contents: write
  packages: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build-app-platforms:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
            package-types: deb
            artifact-patterns: |
              target/dx/scrobble-scrubber-app/**/*.deb
              target/dx/scrobble-scrubber-app/**/scrobble-scrubber-app
          - platform: windows
            os: windows-latest
            package-types: msi
            artifact-patterns: |
              target/dx/scrobble-scrubber-app/**/*.exe
              target/dx/scrobble-scrubber-app/**/*.msi
          - platform: macos-intel
            os: macos-13
            package-types: dmg
            artifact-patterns: |
              target/dx/scrobble-scrubber-app/**/*.app
              target/dx/scrobble-scrubber-app/**/*.dmg
          - platform: macos-arm
            os: macos-latest
            package-types: dmg
            artifact-patterns: |
              target/dx/scrobble-scrubber-app/**/*.app
              target/dx/scrobble-scrubber-app/**/*.dmg

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform }}-app

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev

      - name: Install Dioxus CLI
        run: |
          cargo install dioxus-cli

      - name: Build app bundle
        working-directory: app
        run: |
          dx bundle --release --platform ${{ matrix.platform }} --package-types ${{ matrix.package-types }}

      - name: List artifacts
        working-directory: app
        run: |
          echo "=== PLATFORM-SPECIFIC ARTIFACTS (${{ matrix.platform }}) ==="
          find ../target/dx/scrobble-scrubber-app -type f | sort

      - name: Upload app packages
        uses: actions/upload-artifact@v4
        with:
          name: app-packages-${{ matrix.platform }}
          path: ${{ matrix.artifact-patterns }}
          if-no-files-found: error

  create-release:
    needs: build-app-platforms
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Extract version from tag
        id: version
        run: |
          if [[ ${{ github.ref }} =~ refs/tags/v([0-9]+\.[0-9]+\.[0-9]+.*) ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "version=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Prepare release assets
        run: |
          echo "Downloaded artifacts:"
          find release-assets -type f | sort
          echo "Preparing release assets..."
          mkdir -p release-files

          # Copy all platform-specific artifacts from their respective folders
          find release-assets -name "*.exe" -exec cp {} release-files/scrobble-scrubber-app-windows.exe \;
          find release-assets -name "*.msi" -exec cp {} release-files/ \;
          find release-assets -name "*.dmg" -exec cp {} release-files/ \;
          find release-assets -name "*.deb" -exec cp {} release-files/ \;
          
          # Handle .app bundles by zipping them (distinguish Intel vs ARM)
          find release-assets/app-packages-macos-intel -name "*.app" -type d | while read file; do
            zip -r "release-files/scrobble-scrubber-app-macos-intel.app.zip" "$file"
          done
          find release-assets/app-packages-macos-arm -name "*.app" -type d | while read file; do
            zip -r "release-files/scrobble-scrubber-app-macos-arm64.app.zip" "$file"
          done
          
          # Handle Linux standalone binary
          find release-assets -name "scrobble-scrubber-app" -type f -exec cp {} release-files/scrobble-scrubber-app-linux-x86_64 \;

          echo "Release files prepared:"
          ls -la release-files/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Scrobble Scrubber v${{ steps.version.outputs.version }}"
          body: |
            ## Scrobble Scrubber v${{ steps.version.outputs.version }}

            Desktop application for managing and cleaning Last.fm scrobbles with support for rewrite rules, pending edits, and automated processing.

            ### Downloads

            **Windows:**
            - `scrobble-scrubber-app-windows.exe` - Windows executable

            **macOS:**
            - `scrobble-scrubber-app-macos-intel.app.zip` - macOS Intel application bundle
            - `scrobble-scrubber-app-macos-arm64.app.zip` - macOS Apple Silicon application bundle

            **Linux:**
            - `ScrobbleScrubberApp_*.deb` - Debian/Ubuntu package installer
            - `scrobble-scrubber-app-linux-x86_64` - Standalone binary

            ### Installation

            **Windows:**
            Download and run `scrobble-scrubber-app-windows.exe` directly.

            **macOS:**
            Download the appropriate version for your Mac:
            - Intel Macs: `scrobble-scrubber-app-macos-intel.app.zip`
            - Apple Silicon Macs: `scrobble-scrubber-app-macos-arm64.app.zip`
            
            Unzip and drag the `.app` to your Applications folder. You may need to right-click and select "Open" the first time due to macOS security settings.

            **Debian/Ubuntu:**
            ```bash
            sudo dpkg -i ScrobbleScrubberApp_*.deb
            ```

            **Linux Standalone Binary:**
            ```bash
            chmod +x scrobble-scrubber-app-linux-x86_64
            ./scrobble-scrubber-app-linux-x86_64
            ```

            ### Features
            - System tray integration with dynamic status
            - Automated scrobble processing and cleanup
            - Configurable rewrite rules for track metadata
            - Pending edits management
            - Real-time status monitoring

            ### Cross-Platform Support
            This release provides native builds for Windows, macOS, and Linux platforms.

            Built with Dioxus 0.7 and Rust.
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: release-files/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
